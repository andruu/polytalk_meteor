{
  "name": "polytalk",
  "version": "0.0.1",
  "description": "Polytalk is a simple protocol which allows communication between different languages via TCP.",
  "main": "index.js",
  "directories": {
    "example": "examples"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/andruu/polytalk-node.git"
  },
  "keywords": [
    "protocol",
    "polytalk",
    "sockets"
  ],
  "author": {
    "name": "Andrew Weir"
  },
  "license": "MIT",
  "readme": "# Polytalk\n\nPolytalk is a simple protocol which allows communication between different languages via TCP.\n\nPolytalk currently supports PHP, Node.js and Ruby.\n\n## Protocol\n\nThe protocol is a simple language agnostic JSON object containing the channel, class, method and arguments. It will then return an response as either a string or JSON object.\n\nKey          | Value\n------------ | ------------- \nclass        | The class to call the method on. Namespaced classes require the `::` separator.\nmethod       | The method you want to call.\narguments    | The arguments to inject into the method in key value pairs.\n\n## Installation\n\nvia npm:\n\n```shell\n$ npm install polyscript\n```\n    \n## Server Example\n\nBe sure that any classes you want to be exposed by the server to the client are exposed to the the servers constructor.\n\n### JavaScript\n\n```javascript\nvar Polytalk = require('polytalk');\n\nvar exposes = {};\nexposes['Model.Order'] = require('./model/order');\n\nvar server = new Polytalk.Server({ port: 9090, exposes: exposes });\n\nserver.run(function(connection, request) {\n  server.call(request, function (response) {\n    server.push(connection, response);\n  });\n});\n```\n\n### Coffeescript\n\n```coffeescript\nPolytalk = require 'polytalk'\n\nexposes = {}\nexposes['Model.Order'] = require './model/order'\n\nserver = new Polytalk.Server port: 9090, exposes: exposes\n\nserver.run (connection, request) ->\n  server.call request, (response) ->\n    server.push(connection, response)\n```\n\n## Client Example\n\n### JavaScript\n  \n```javascript\nvar Polytalk = require('polytalk');\n\nvar request = {\n    class: 'Model::Order',\n    method: 'findBySize',\n    arguments: {\n      size: 'large',\n      limit: 3\n    }\n}\n\nvar client = new Polytalk.Client({ port: 9090 });\n\nclient.call(request, function (response) {\n  console.log(response);\n});\n```\n\n### Coffeescript\n\n```coffeescript\nPolytalk = require 'polytalk'\n\nrequest = \n  class: 'Model::Order'\n  method: 'findBySize'\n  arguments:\n    size: 'large'\n    limit: 3\n\nclient = new Polytalk.Client port: 9090\n\nclient.call request, (response) ->\n  console.log response\n```\n\n### License\n\nMIT, see LICENSE.",
  "_id": "polytalk@0.0.1",
  "_from": "polytalk"
}
